Index: SAPS.Web/src/App.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Navigate, Outlet, Route, Routes } from \"react-router-dom\";\r\nimport { AuthProvider, useAuth } from \"@/services/auth/AuthContext\";\r\nimport { ParkingLotProvider, useParkingLot } from \"@/pages/ParkingLotOwner/ParkingLotContext\";\r\n\r\nimport IndexPage from \"@/pages/index\";\r\nimport DocsPage from \"@/pages/docs\";\r\nimport PricingPage from \"@/pages/pricing\";\r\nimport BlogPage from \"@/pages/blog\";\r\nimport AboutPage from \"@/pages/about\";\r\nimport ErrorPage from \"@/pages/ErrorPage\";\r\nimport LoginPage from \"./pages/Auth/Login\";\r\nimport OwnerDashboard from \"./pages/ParkingLotOwner/Home/OwnerDashboard\";\r\nimport AdminDashboard from \"./pages/Admin/AdminDashboard\";\r\nimport { WhitelistManagement } from \"./pages/ParkingLotOwner/Whitelist/WhiteListManagement\";\r\nimport IncidentReports from \"./pages/ParkingLotOwner/IncidentReports/IncidentReports\";\r\nimport ParkingHistory from \"./pages/ParkingLotOwner/ParkingHistory/HistoryManagement/ParkingHistory\";\r\nimport StaffManagement from \"./pages/ParkingLotOwner/StaffManagement/StaffManagement\";\r\nimport ParkingLotInfo from \"./pages/ParkingLotOwner/ParkingInfo/ParkingLotInfo\";\r\nimport AdminAccountList from \"./pages/Admin/Accounts/AdminAccounts/AdminAccountList\";\r\n// import AdminAccountList from \"./pages/Admin/Auth/AdminAccountList\";\r\nimport AdminParkingLotOwnerList from \"./pages/Admin/ParkingLotOwner/ParkingLotOwnerList\";\r\n// import AdminParkingLotOwnerList from \"./pages/Admin/Auth/AdminParkingLotOwnerList\";\r\n// import AdminRequestList from \"./pages/Admin/Auth/AdminRequestList\";\r\nimport { ADMIN_ROLE, OWNER_ROLE } from \"./config/base\";\r\nimport ParkingFeeManagement from \"./pages/ParkingLotOwner/ParkingFee/ParkingFeeManagement\";\r\nimport StaffDetailScreen from \"./pages/ParkingLotOwner/StaffManagement/StaffDetail\";\r\nimport UploadFile from \"./pages/ParkingLotOwner/UploadFile\";\r\nimport ParkingHistoryDetail from \"./pages/ParkingLotOwner/ParkingHistory/HistoryManagement/ParkingHistoryDetail\";\r\nimport IncidentDetail from \"./pages/ParkingLotOwner/IncidentReports/IncidentDetail\";\r\nimport SubscriptionPricingSelect from \"./pages/ParkingLotOwner/Subscription/SubscriptionPricingSelect\";\r\nimport StaffShiftManagement from \"./pages/ParkingLotOwner/StaffShift/StaffShiftManagement\";\r\n\r\n// Protected Route Component\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: 'admin' | 'parkinglotowner';\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, requiredRole }) => {\r\n  const { user, isAuthenticated, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/auth/login\" replace />;\r\n  }\r\n\r\n  if (requiredRole && user?.role !== requiredRole) {\r\n    return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n// Active Route Component for parking lot status check\r\ninterface ActiveRouteProps {\r\n  children: React.ReactNode;\r\n  requireActive?: boolean;\r\n}\r\n\r\nconst ActiveRoute: React.FC<ActiveRouteProps> = ({ children, requireActive = true }) => {\r\n  const { selectedParkingLot, loading } = useParkingLot();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // If requireActive is true, check if parking lot is active\r\n  if (requireActive && selectedParkingLot?.status !== 'Active') {\r\n    return <Navigate to=\"/owner/subscription\" replace />;\r\n  }\r\n\r\n  // If requireActive is false, check if parking lot is inactive\r\n  if (!requireActive && selectedParkingLot?.status === 'Active') {\r\n    return <Navigate to=\"/owner/parking-info\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nconst PublicRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { isAuthenticated, user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Or your loading component\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    switch (user?.role) {\r\n      case 'admin':\r\n        return <Navigate to=\"/admin/home\" replace />;\r\n      case 'parkinglotowner':\r\n        return <Navigate to=\"/owner/parking-info\" replace />;\r\n      default:\r\n        return <Navigate to=\"/unauthorized\" replace />;\r\n    }\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nconst RoleBasedRedirect: React.FC = () => {\r\n  const { user, isAuthenticated, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Or your loading component\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/auth/login\" replace />;\r\n  }\r\n\r\n  switch (user?.role) {\r\n    case 'admin':\r\n      return <Navigate to=\"/admin/home\" replace />;\r\n    case 'parkinglotowner':\r\n      return <Navigate to=\"/owner/parking-info\" replace />;\r\n    default:\r\n      return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n};\r\n\r\nconst OwnerParkingLotProviderWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const userId = user?.id || \"\";\r\n  return (\r\n    <ParkingLotProvider userId={userId}>\r\n      {children}\r\n    </ParkingLotProvider>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Routes>\r\n        {/* Public Routes */}\r\n        <Route path=\"/\" element={<RoleBasedRedirect />} />\r\n        <Route path=\"/docs\" element={<DocsPage />} />\r\n        <Route path=\"/pricing\" element={<PricingPage />} />\r\n        <Route path=\"/blog\" element={<BlogPage />} />\r\n        <Route path=\"/about\" element={<AboutPage />} />\r\n\r\n        {/* Auth Routes */}\r\n        <Route\r\n          path=\"/auth/login\"\r\n          element={\r\n            <PublicRoute>\r\n              <LoginPage />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n\r\n        {/* Public landing page - only for unauthenticated users */}\r\n        <Route\r\n          path=\"/landing\"\r\n          element={\r\n            <PublicRoute>\r\n              <IndexPage />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n\r\n        {/* Protected Routes */}\r\n        {/* Admin Routes */}\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            <ProtectedRoute requiredRole={ADMIN_ROLE}>\r\n              <Outlet />\r\n            </ProtectedRoute>\r\n          }\r\n        >\r\n          <Route path=\"home\" element={<AdminDashboard />} />\r\n          <Route path=\"accounts\" element={<AdminAccountList />} />\r\n          <Route path=\"parking-owners\" element={<AdminParkingLotOwnerList />} />\r\n          <Route path=\"requests\" element={<AdminRequestList />} />\r\n        </Route>\r\n\r\n        {/* Owner Routes */}\r\n        <Route\r\n          path=\"/owner/*\"\r\n          element={\r\n            <ProtectedRoute requiredRole={OWNER_ROLE}>\r\n              <OwnerParkingLotProviderWrapper>\r\n                <Outlet />\r\n              </OwnerParkingLotProviderWrapper>\r\n            </ProtectedRoute>\r\n          }\r\n        >\r\n          <Route path=\"home\" element={<OwnerDashboard />} />\r\n          <Route path=\"parking-info\" element={<ParkingLotInfo />} />\r\n          <Route path=\"staff\" element={\r\n            <StaffManagement />\r\n          } />\r\n          <Route path=\"staff/:parkingLotId/:staffId\" element={\r\n            <StaffDetailScreen />\r\n          } />\r\n          <Route path=\"history\" element={\r\n            <ParkingHistory />\r\n          } />\r\n          <Route path=\"history/:parkingLotId/:sessionId\" element={\r\n            <ParkingHistoryDetail />\r\n          } />\r\n          <Route path=\"incidents\" element={\r\n            <ActiveRoute requireActive={true}>\r\n              <IncidentReports />\r\n            </ActiveRoute>\r\n          } />\r\n          <Route path=\"incidents/:parkingLotId/:incidentId\" element={\r\n            <ActiveRoute requireActive={true}>\r\n              <IncidentDetail />\r\n            </ActiveRoute>\r\n          } />\r\n          <Route path=\"whitelist\" element={\r\n            <ActiveRoute requireActive={true}>\r\n              <WhitelistManagement />\r\n            </ActiveRoute>\r\n          } />\r\n          <Route path=\"parking-fee\" element={\r\n            <ActiveRoute requireActive={true}>\r\n              <ParkingFeeManagement />\r\n            </ActiveRoute>\r\n          } />\r\n          <Route path=\"upload-file\" element={<UploadFile />} />\r\n          <Route path=\"subscription\" element={\r\n            // <ActiveRoute requireActive={false}>\r\n            <SubscriptionPricingSelect />\r\n            // </ActiveRoute>\r\n          } />\r\n          <Route path=\"staff-shift\" element={\r\n            <ActiveRoute requireActive={true}>\r\n              <StaffShiftManagement />\r\n            </ActiveRoute>\r\n          } />\r\n        </Route>\r\n\r\n        {/* Dashboard redirect route */}\r\n        <Route path=\"/dashboard\" element={<RoleBasedRedirect />} />\r\n\r\n        {/* Error Routes */}\r\n        <Route path=\"/unauthorized\" element={<ErrorPage statusCode={401} />} />\r\n        <Route path=\"*\" element={<ErrorPage statusCode={404} />} />\r\n      </Routes>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SAPS.Web/src/App.tsx b/SAPS.Web/src/App.tsx
--- a/SAPS.Web/src/App.tsx	(revision 6a39aee215de1c51dcc3830d181b4ea7de9674e4)
+++ b/SAPS.Web/src/App.tsx	(date 1754020015093)
@@ -29,6 +29,7 @@
 import IncidentDetail from "./pages/ParkingLotOwner/IncidentReports/IncidentDetail";
 import SubscriptionPricingSelect from "./pages/ParkingLotOwner/Subscription/SubscriptionPricingSelect";
 import StaffShiftManagement from "./pages/ParkingLotOwner/StaffShift/StaffShiftManagement";
+import AdminRequestList from "@/pages/Admin/Requests/AdminRequestList.tsx";
 
 // Protected Route Component
 interface ProtectedRouteProps {
Index: SAPS.Web/src/config/base.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const mockUrl =\r\n  \"https://a12fd66f-74be-4779-97a3-4fef023e9291.mock.pstmn.io\";\r\nexport const localUrl = \"https://localhost:7136\";\r\nexport const apiUrl = localUrl;\r\nexport const OWNER_ROLE = \"parkinglotowner\";\r\n\r\nexport const ADMIN_ROLE = \"admin\";\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SAPS.Web/src/config/base.tsx b/SAPS.Web/src/config/base.tsx
--- a/SAPS.Web/src/config/base.tsx	(revision 6a39aee215de1c51dcc3830d181b4ea7de9674e4)
+++ b/SAPS.Web/src/config/base.tsx	(date 1754020015094)
@@ -1,7 +1,8 @@
 export const mockUrl =
   "https://a12fd66f-74be-4779-97a3-4fef023e9291.mock.pstmn.io";
 export const localUrl = "https://localhost:7136";
-export const apiUrl = localUrl;
+export const localUrl2 = "https://localhost:7284";
+export const apiUrl = localUrl2;
 export const OWNER_ROLE = "parkinglotowner";
 
 export const ADMIN_ROLE = "admin";
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"06a12574-f358-49e9-9abb-9127d952d4cc\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"huybach\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"30cwCu0DkgEk2OCCk0Ijqab4Dfe\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"last_opened_file_path\": \"F:/Capstone/SAPS\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-WS-251.27812.50\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"905a0a15-887e-4c9a-a792-5e24e9e413ab\" name=\"Changes\" comment=\"\" />\r\n      <created>1753940044974</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1753940044974</updated>\r\n      <workItem from=\"1753940046963\" duration=\"4535000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add package\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753946390805</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753946390805</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"update modals\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753949126245</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753949126245</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add package\" />\r\n    <MESSAGE value=\"update modals\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update modals\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6a39aee215de1c51dcc3830d181b4ea7de9674e4)
+++ b/.idea/workspace.xml	(date 1754020015091)
@@ -4,7 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="06a12574-f358-49e9-9abb-9127d952d4cc" name="Changes" comment="" />
+    <list default="true" id="06a12574-f358-49e9-9abb-9127d952d4cc" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/SAPS.Web/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/SAPS.Web/src/App.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SAPS.Web/src/config/base.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/SAPS.Web/src/config/base.tsx" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -31,12 +34,14 @@
     "ModuleVcsDetector.initialDetectionPerformed": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "huybachtestmerge",
     "last_opened_file_path": "F:/Capstone/SAPS",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
     "nodejs_package_manager_path": "npm",
+    "ts.external.directory.path": "F:\\Capstone\\SAPS\\SAPS.Web\\node_modules\\typescript\\lib",
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
